import{L as w,E as F,r as i,M as o}from"./index-lVYO9Yiu.js";const C=w("menu",()=>{const n=F(),c=i([]),s=i([]),t=i(!1),d=i(null),y=i(null);async function f(){try{t.value=!0;const e=await o.get("/categories");c.value=e.data}catch(e){console.error("Error fetching categories:",e),n.error("Failed to load menu categories")}finally{t.value=!1}}async function m(e){try{t.value=!0;const a=await o.get(`/categories/${e}`);return d.value=a.data,a.data}catch(a){return console.error(`Error fetching category ${e}:`,a),n.error("Failed to load category details"),null}finally{t.value=!1}}async function g(e){try{t.value=!0;const a=await o.post("/categories",e);return c.value.push(a.data),n.success("Category created successfully"),a.data}catch(a){return console.error("Error creating category:",a),n.error("Failed to create category"),null}finally{t.value=!1}}async function v(e,a){try{t.value=!0;const r=await o.put(`/categories/${e}`,a),l=c.value.findIndex(u=>u.id===e);return l!==-1&&(c.value[l]=r.data),n.success("Category updated successfully"),r.data}catch(r){return console.error(`Error updating category ${e}:`,r),n.error("Failed to update category"),null}finally{t.value=!1}}async function p(e){try{if(!c.value.find(u=>u.id===e))return null;t.value=!0;const r=await o.patch(`/categories/${e}/toggle-availability`),l=c.value.findIndex(u=>u.id===e);return l!==-1&&(c.value[l].is_available=r.data.is_available),n.success(`Category ${r.data.is_available?"enabled":"disabled"} successfully`),r.data}catch(a){return console.error(`Error toggling category ${e} availability:`,a),n.error("Failed to update category availability"),null}finally{t.value=!1}}async function h(e){try{t.value=!0;const a=e?`/categories/${e}/menu-items`:"/menu-items",r=await o.get(a);s.value=r.data}catch(a){console.error("Error fetching menu items:",a),n.error("Failed to load menu items")}finally{t.value=!1}}async function b(e){try{t.value=!0;const a=await o.get(`/menu-items/${e}`);return y.value=a.data,a.data}catch(a){return console.error(`Error fetching menu item ${e}:`,a),n.error("Failed to load menu item details"),null}finally{t.value=!1}}async function $(e){try{t.value=!0;const a=await o.post("/menu-items",e);return s.value.push(a.data),n.success("Menu item created successfully"),a.data}catch(a){return console.error("Error creating menu item:",a),n.error("Failed to create menu item"),null}finally{t.value=!1}}async function I(e,a){try{t.value=!0;const r=await o.put(`/menu-items/${e}`,a),l=s.value.findIndex(u=>u.id===e);return l!==-1&&(s.value[l]=r.data),n.success("Menu item updated successfully"),r.data}catch(r){return console.error(`Error updating menu item ${e}:`,r),n.error("Failed to update menu item"),null}finally{t.value=!1}}async function M(e){try{return t.value=!0,await o.delete(`/menu-items/${e}`),s.value=s.value.filter(a=>a.id!==e),n.success("Menu item deleted successfully"),!0}catch(a){return console.error(`Error deleting menu item ${e}:`,a),n.error("Failed to delete menu item"),!1}finally{t.value=!1}}async function E(e){try{if(!s.value.find(u=>u.id===e))return null;t.value=!0;const r=await o.patch(`/menu-items/${e}/toggle-availability`),l=s.value.findIndex(u=>u.id===e);return l!==-1&&(s.value[l].is_available=r.data.is_available),n.success(`Menu item ${r.data.is_available?"enabled":"disabled"} successfully`),r.data}catch(a){return console.error(`Error toggling menu item ${e} availability:`,a),n.error("Failed to update menu item availability"),null}finally{t.value=!1}}return{categories:c,menuItems:s,isLoading:t,currentCategory:d,currentMenuItem:y,fetchCategories:f,getCategoryById:m,createCategory:g,updateCategory:v,toggleCategoryAvailability:p,fetchMenuItems:h,getMenuItemById:b,createMenuItem:$,updateMenuItem:I,deleteMenuItem:M,toggleMenuItemAvailability:E}});export{C as u};
